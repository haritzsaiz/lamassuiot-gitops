apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: rabbitmq-cert
  namespace: default
spec:
  isCA: false
  commonName: rabbitmq
  dnsNames:
    - "rabbitmq"
  secretName: rabbitmq-cert-secret
  privateKey:
    algorithm: ECDSA
    size: 256
  issuerRef:
    name: lamassu-ca-issuer
    kind: Issuer
    group: cert-manager.io
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: rabbitmq-cm
  namespace: default
data:
  config.json: |
    {
      "log": {
          "file": {
              "level": "debug"
          }
      },
      "listeners": {
          "tcp": "none",
          "ssl": {
              "default": 5671
          }
      },
      "ssl_options": {
          "cacertfile": "/certs/internal-ca.crt",
          "certfile": "/certs/tls.crt",
          "keyfile": "/certs/tls.key",
          "verify": "verify_peer",
          "fail_if_no_peer_cert": true
      },
      "ssl_cert_login_from": "common_name",
      "auth_backends": {
          "1": "rabbit_auth_backend_internal"
      },
      "auth_mechanisms": {
          "1": "PLAIN",
          "2": "EXTERNAL"
      },
      "management": {
          "ssl": {
              "cacertfile": "/certs/internal-ca.crt",
              "certfile": "/certs/tls.crt",
              "keyfile": "/certs/tls.key"
          },
          "cors": {
              "allow_origins": {
                  "1": "*"
              }
          }

      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:  
  name: rabbitmq-deployment
  namespace: default
  labels:
    app: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: lamassuiot/lamassu-rabbitmq:v1.0.5
          volumeMounts:
            - name: rabbitmq-json-config
              mountPath: /etc/rabbitmq/rabbitmq.conf
              subPath: rabbitmq.conf
            - name: rabbitmq-tls-certificates
              mountPath: /certs/tls.crt
              subPath: tls.crt
            - name: rabbitmq-tls-certificates
              mountPath: /certs/tls.key
              subPath: tls.key
            - name: rabbitmq-tls-certificates
              mountPath: /certs/internal-ca.crt
              subPath: ca.crt
          ports:
            - containerPort: 5671
            - containerPort: 15672

      restartPolicy: Always
      volumes:
        - name: rabbitmq-json-config
          configMap:  
            name: rabbitmq-cm
        - name: rabbitmq-tls-certificates
          secret:
            secretName: rabbitmq-cert-secret
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  namespace: default
spec:
  selector:
    app: rabbitmq
  type: ClusterIP
  ports:
  - name: rabbitmq-amqps
    port: 5671
    targetPort: 5671
  - name: rabbitmq-ui
    port: 15672
    targetPort: 15672
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata: 
  name: rabbitmq-ingress
  namespace: default
  annotations: 
    cert-manager.io/issuer: "lamassu-ca-issuer"
    kubernetes.io/ingress.class: "nginx"
spec:
  tls:
  - hosts:
    - rabbitmq.dev.lamassu.io
    secretName: downstream-crt-secret
  rules:
  - host: rabbitmq.dev.lamassu.io
    http: 
      paths:
      - pathType: Prefix
        path: /
        backend: 
          service: 
            name: "rabbitmq-amqps"
            port:
              number: 5671
  - host: rabbitmq.dev.lamassu.io
    http: 
      paths:
      - pathType: Prefix
        path: /
        backend: 
          service: 
            name: "rabbitmq-ui"
            port:
              number: 15672
